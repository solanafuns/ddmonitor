name: Build like sui

on:
  release:
    types: [created]

jobs:
  release-build:
    timeout-minutes: 80
    strategy:
      matrix:
        os: [windows-ghcloud, ubuntu-ghcloud, macos-latest-xl, macos-arm64-self-hosted]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checking out 
        uses: actions/checkout@v3
        
      - name: Setup caching
        uses: bmwill/rust-cache@v1 # Fork of 'Swatinem/rust-cache' which allows caching additional paths          
      
      - name: Install nexttest (Windows)
        if: ${{ matrix.os == 'windows-ghcloud' }}
        run: echo "this is windows"

      - name: cargo build (release) for ${{ matrix.os }} platform
        shell: bash
        run: |
          [ -f ~/.cargo/env ] && source ~/.cargo/env ; cargo build --release

      - name: Rename binaries for ${{ matrix.os }}
        if: ${{ matrix.os != 'windows-ghcloud' }}
        shell: bash
        run: |
          export arch=$(uname -m)
          export system_os=$(echo ${{ matrix.os }} | cut -d- -f1)
          export os_type="${system_os}-${arch}"
          echo "os_type=${system_os}-${arch}" >> $GITHUB_ENV
          mv ./target/release/server ./target/release/server-${os_type}
          mv ./target/release/operator ./target/release/operator-${os_type}
          tar -cvzf ./target/release/ddmonitor-${os_type}.tgz ./target/release/server-${os_type} ./target/release/operator-${os_type}

      - name: Rename binaries for Windows
        if: ${{ matrix.os == 'windows-ghcloud' }}
        shell: bash
        run: |
          export arch=$(uname -m)
          export os_type="windows-${arch}"
          echo "os_type=${os_type}" >> $GITHUB_ENV
          mv ./target/release/server.exe ./target/release/server-${os_type}.exe
          mv ./target/release/operator.exe ./target/release/operator-${os_type}.exe
          
          tar -cvzf ./target/release/ddmonitor-${os_type}.tgz ./target/release/server-${os_type}.exe ./target/release/operator-${os_type}.exe 

      - name: Upload release artifacts for ${{ matrix.os }} platform
        uses: actions/upload-artifact@v3
        with:
          name: sui-binaries-${{ matrix.os }}
          if-no-files-found: error
          path: |
            ./target/release/ddmonitor-${{ env.os_type }}.tgz

      - name: Publish binaries for ${{ env.sui_tag }} release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./target/release/ddmonitor-${{ env.os_type }}.tgz
        env:
          # Have to use a Personal Access Token (PAT), based on https://tinyurl.com/2by2ntdr
          GITHUB_TOKEN: ${{ secrets.GH_RELEASE_BUILDS_TOKEN }}